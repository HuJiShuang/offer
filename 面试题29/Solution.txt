import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
       int rowLength = matrix.length;
       int colLength = matrix[0].length;
       if(matrix == null || rowLength <= 0 || colLength <= 0)
           return null;
        ArrayList<Integer> list = new ArrayList<>();
        int start = 0;
        //循环打印的条件
        while(rowLength > start * 2 && colLength > start * 2){
            list = printMatrixIncirle(matrix, rowLength, colLength, start,list);
            start++;
        }
        return list;
    }
    public ArrayList<Integer> printMatrixIncirle(int [][] matrix, int rowLength, int colLength,int start, ArrayList<Integer> list){
        int endX = colLength -1 - start;
        int endY = rowLength -1 - start;
        //从左到右打印一行
        for(int i = start;i<=endX;i++)
            list.add(matrix[start][i]);
        //如果圈内满足至少有两行，则从上到下打印一列
        if(endY > start){
            for(int i = start + 1;i <= endY;i++)
                list.add(matrix[i][endX]);
            //如果满足圈内至少有两行两列，则从右到左打印一行
            if(endX > start){
                for(int i = endX - 1;i>=start;i--)
                    list.add(matrix[endY][i]);
                //如果满足至少有三行两列，则从下到上打印一列
                if(endY >= start+2)
                    for(int i = endY - 1;i>start;i--)
                        list.add(matrix[i][start]);
            }
        }
        return list;
    }     
}